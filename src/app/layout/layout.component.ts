import { Component, OnDestroy } from '@angular/core';
import { Store } from '@ngrx/store';
import { filter, from, mergeMap, tap } from 'rxjs';
import { BreadcrumbService } from 'xng-breadcrumb';
import { getSidenavMenuItems, State } from './state/layout.reducer';

@Component({
  templateUrl: './layout.component.html',
  styleUrls: ['./layout.component.scss']
})
export class LayoutComponent implements OnDestroy {

  breadcrumbs$ = this.breadcrumbService.breadcrumbs$.pipe(
    mergeMap((breadcrumbDefinitions) => from(breadcrumbDefinitions).pipe(
      filter(breadcrumbDefinition => !!breadcrumbDefinition.alias && !!breadcrumbDefinition.isAutoGeneratedLabel),
      mergeMap(breadcrumbDefinition =>
        this.store.select(getSidenavMenuItems).pipe(
          tap(menu => {
            if (breadcrumbDefinition.routeLink) {
              for(const item of menu) {
                if (item.path === breadcrumbDefinition.routeLink) {
                  this.breadcrumbService.set(item.path, item.title);
                  return;
                }
                for(const subItem of item.subMenu || []) {
                  if (subItem.path === breadcrumbDefinition.routeLink) {
                    this.breadcrumbService.set(subItem.path, subItem.title);
                    return;
                  }
                }
              }
            }
          }),
        ),
      )
    )),
  ).subscribe();

  constructor(private store: Store<State>, private breadcrumbService: BreadcrumbService) {}

  ngOnDestroy(): void {
    this.breadcrumbs$.unsubscribe();
  }

}
